What happens when you initialize a repository? Why do you need to do it?

Git makes the base .git folder and starts tracking all files in the folder.


How is the staging area different from the working directory and the repository?
What value do you think it offers?

The staging area holds untracked files.
It is a useful place to try out new changes without committing them.


How can you use the staging area to make sure you have one commit per logical
change?

Running "git diff --staged" lets you check which files you are about to commit and
hence if they match what you thought you were checking in.


What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Maybe when making a bug fix/feature that is not scheduled for the next release.


How do the diagrams help you visualize the branch structure?

It is a great roadmap of when/where/why branches occurred and if they ever merged back in


What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

The new master has all the existing functionality plus the new ones from the branch.
The visual shows the development happened in parallel and then merged later.


What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

Pros: Automatic merging saves time when committing trivial/non-conflicting changes.
Cons: Possible to miss potential bugs because you did not eyeball the change one last time.